import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt


import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

st.title("Dashboard: Analiza op√≥≈∫nie≈Ñ pociƒÖg√≥w")

st.image(
    r"D:\Dev-Env\sources\repos\DataScience\datascience\datascience\miniprojekt_4\pendolino.webp",
    caption="Pendolino ‚Äî symbol nowoczesnych kolei w Polsce",
    use_container_width=True
)



@st.cache_data
def load_data():
    return pd.read_csv("delays_cleaned.csv")

df = load_data()

st.title("Dashboard: Analiza op√≥≈∫nie≈Ñ pociƒÖg√≥w")


st.header("Statystyki og√≥lne")
col1, col2, col3 = st.columns(3)
col1.metric("Liczba rekord√≥w", f"{len(df):,}")
col2.metric("≈örednie op√≥≈∫nienie [min]", f"{df['delay_minutes'].mean():.2f}")
col3.metric("Mediana op√≥≈∫nienia [min]", f"{df['delay_minutes'].median():.2f}")


st.subheader("Rozk≈Çad op√≥≈∫nie≈Ñ (histogram)")
fig, ax = plt.subplots()
ax.hist(df['delay_minutes'], bins=50, edgecolor='black')
ax.set_xlabel("Op√≥≈∫nienie [min]")
ax.set_ylabel("Liczba przypadk√≥w")
st.pyplot(fig)


st.subheader("≈örednie op√≥≈∫nienie wg przewo≈∫nika")
top_n = st.slider("Poka≈º top N przewo≈∫nik√≥w:", 3, 15, 7)
carrier_stats = df.groupby('carrier')['delay_minutes'].mean().sort_values(ascending=False).head(top_n)
st.bar_chart(carrier_stats)


st.subheader("≈örednie op√≥≈∫nienie wg godziny")
hourly = df.groupby('hour')['delay_minutes'].mean()
st.line_chart(hourly)


st.subheader("≈örednie op√≥≈∫nienie wg dnia tygodnia")
dni = ['Pon', 'Wt', '≈ör', 'Czw', 'Pt', 'Sob', 'Nd']
dow = df.groupby('dayofweek')['delay_minutes'].mean()
dow.index = dni[:len(dow)]
st.bar_chart(dow)


st.header("Szczeg√≥≈Çowa analiza (wybierz przewo≈∫nika i godzinƒô)")
carrier_options = df['carrier'].dropna().unique()
selected_carrier = st.selectbox("Przewo≈∫nik:", sorted(carrier_options))
selected_hour = st.slider("Godzina:", int(df['hour'].min()), int(df['hour'].max()), int(df['hour'].min()))
filtered = df[(df['carrier'] == selected_carrier) & (df['hour'] == selected_hour)]

st.write(f"Liczba przypadk√≥w: {len(filtered)}")
st.write(f"≈örednie op√≥≈∫nienie: {filtered['delay_minutes'].mean():.2f} min")

if not filtered.empty:
    st.subheader("Histogram op√≥≈∫nie≈Ñ (filtrowany)")
    fig2, ax2 = plt.subplots()
    ax2.hist(filtered['delay_minutes'], bins=30, edgecolor='black')
    ax2.set_xlabel("Op√≥≈∫nienie [min]")
    ax2.set_ylabel("Liczba przypadk√≥w")
    st.pyplot(fig2)


st.header("PodglƒÖd danych")
st.dataframe(df.sample(100))

st.markdown("""
---
App by [Twoje Imiƒô] | Powered by Streamlit üöÑ
""")
